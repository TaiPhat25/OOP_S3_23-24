/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.lab7;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Tai-E758
 */
public class CDStore extends javax.swing.JFrame {

    private CDManager managerCD = new CDManager();
    private CDTableModel modelCD = new CDTableModel();

    /**
     * Creates new form CDStore
     */
    public CDStore() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnNewCD = new javax.swing.JButton();
        btnBackup = new javax.swing.JButton();
        btnRestore = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        searchType = new javax.swing.JComboBox<>();
        inputSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnNewCD.setFont(new java.awt.Font("Windows 7 Segoe UI", 0, 12)); // NOI18N
        btnNewCD.setText("New CD");
        btnNewCD.setPreferredSize(new java.awt.Dimension(75, 25));
        btnNewCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCDActionPerformed(evt);
            }
        });
        jPanel1.add(btnNewCD);

        btnBackup.setFont(new java.awt.Font("Windows 7 Segoe UI", 0, 12)); // NOI18N
        btnBackup.setText("Backup");
        btnBackup.setPreferredSize(new java.awt.Dimension(75, 25));
        btnBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackupActionPerformed(evt);
            }
        });
        jPanel1.add(btnBackup);

        btnRestore.setFont(new java.awt.Font("Windows 7 Segoe UI", 0, 12)); // NOI18N
        btnRestore.setText("Restore");
        btnRestore.setPreferredSize(new java.awt.Dimension(75, 25));
        btnRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestoreActionPerformed(evt);
            }
        });
        jPanel1.add(btnRestore);

        btnRefresh.setFont(new java.awt.Font("Windows 7 Segoe UI", 0, 12)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.setPreferredSize(new java.awt.Dimension(75, 25));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        jPanel1.add(btnRefresh);

        btnDelete.setFont(new java.awt.Font("Windows 7 Segoe UI", 0, 12)); // NOI18N
        btnDelete.setText(" Delete");
        btnDelete.setPreferredSize(new java.awt.Dimension(75, 25));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete);

        table.setFont(new java.awt.Font("Windows 7 Segoe UI", 0, 12)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title", "Collection", "Type", "Price"
            }
        ));
        jScrollPane1.setViewportView(table);

        searchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Game", "Movie", "Music" }));
        searchType.setPreferredSize(new java.awt.Dimension(75, 25));
        searchType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTypeActionPerformed(evt);
            }
        });
        jPanel2.add(searchType);

        inputSearch.setFont(new java.awt.Font("Windows 7 Segoe UI", 0, 12)); // NOI18N
        inputSearch.setPreferredSize(new java.awt.Dimension(175, 25));
        jPanel2.add(inputSearch);

        btnSearch.setFont(new java.awt.Font("Windows 7 Segoe UI", 0, 12)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.setPreferredSize(new java.awt.Dimension(75, 25));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel2.add(btnSearch);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackupActionPerformed
        JFileChooser fc = new JFileChooser("D:\\Programming Languages\\Java\\CSE 203\\OOP_S3_23-24\\Lab7\\Lab7");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("EIU File (*.eiu)", "eiu");

        fc.setFileFilter(filter);
        int options = fc.showSaveDialog(null);

        if (options == JFileChooser.APPROVE_OPTION) {
            String fileName = fc.getSelectedFile().toString();
            if (!fileName.endsWith(".eiu")) {
                fileName += ".eiu";
            }
            writeTo(fileName);
        }
    }//GEN-LAST:event_btnBackupActionPerformed

    private void btnNewCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCDActionPerformed
        NewCDDialog cdDLG = new NewCDDialog(managerCD);
        cdDLG.setVisible(true);
    }//GEN-LAST:event_btnNewCDActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        refreshTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = table.getSelectedRow();
        Object[] options = {"Yes", "No"};
        if (selectedRow != -1) {
            int askDeletedRow = JOptionPane.showOptionDialog(null, "Are You Sure You Want To Remove This Row?", "CONFIRM?", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[1]);
            if (askDeletedRow == JOptionPane.YES_OPTION) {
                managerCD.deleteCD((String) table.getValueAt(selectedRow, 0));
                refreshTable();
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestoreActionPerformed
        JFileChooser fc = new JFileChooser("D:\\Programming Languages\\Java\\CSE 203\\OOP_S3_23-24\\Lab7\\Lab7");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("EIU File (*.eiu)", "eiu");

        fc.setFileFilter(filter);
        int options = fc.showOpenDialog(null);

        if (options == JFileChooser.APPROVE_OPTION) {
            readFrom(fc.getSelectedFile().getAbsolutePath());
            refreshTable();
        }
    }//GEN-LAST:event_btnRestoreActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if (searchType.getSelectedItem().toString().equals("All")) {
            String selectedID = inputSearch.getText();
            var cdList = managerCD.getListCD();

            for (int i = 0; i < cdList.size(); i++) {
                if (cdList.get(i).getCdID().equals(selectedID)) {
                    modelCD.setRowCount(0);
                    Object[] data = {cdList.get(i).getCdTitle(), cdList.get(i).getCdCollection(), cdList.get(i).getCdType(), cdList.get(i).getCdPrice()};
                    modelCD.addRow(data);
                    table.setModel(modelCD);
                }
            }
        } else if (searchType.getSelectedItem().toString().equals("Game")) {
            var cdList = managerCD.getListCD();
            modelCD.setRowCount(0);

            for (int i = 0; i < cdList.size(); i++) {
                if (cdList.get(i).getCdCollection().equals("Game")) {
                    Object[] data = {cdList.get(i).getCdTitle(), cdList.get(i).getCdCollection(), cdList.get(i).getCdType(), cdList.get(i).getCdPrice()};
                    modelCD.addRow(data);
                    table.setModel(modelCD);
                }
            }
        } else if (searchType.getSelectedItem().toString().equals("Movie")) {
            var cdList = managerCD.getListCD();
            modelCD.setRowCount(0);

            for (int i = 0; i < cdList.size(); i++) {
                if (cdList.get(i).getCdCollection().equals("Movie")) {
                    Object[] data = {cdList.get(i).getCdTitle(), cdList.get(i).getCdCollection(), cdList.get(i).getCdType(), cdList.get(i).getCdPrice()};
                    modelCD.addRow(data);
                    table.setModel(modelCD);
                }
            }
        } else if (searchType.getSelectedItem().toString().equals("Music")) {
            var cdList = managerCD.getListCD();
            modelCD.setRowCount(0);

            for (int i = 0; i < cdList.size(); i++) {
                if (cdList.get(i).getCdCollection().equals("Music")) {
                    Object[] data = {cdList.get(i).getCdTitle(), cdList.get(i).getCdCollection(), cdList.get(i).getCdType(), cdList.get(i).getCdPrice()};
                    modelCD.addRow(data);
                    table.setModel(modelCD);
                }
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void searchTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTypeActionPerformed

    }//GEN-LAST:event_searchTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CDStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CDStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CDStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CDStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CDStore().setVisible(true);
            }
        });
    }

    public void fillInTable() {
        for (CDInformation cd : managerCD.getListCD()) {
            String[] rowCDInfo = {cd.getCdTitle(), cd.getCdCollection(), cd.getCdType(), String.valueOf(cd.getCdPrice())};
            modelCD.addRow(rowCDInfo);
        }
        table.setModel(modelCD);
    }

    public void clearTable() {
        if (modelCD != null) {
            modelCD.setRowCount(0);
        }
    }

    public void refreshTable() {
        clearTable();
        fillInTable();
    }

    public void writeTo(String directory) {
        try {
            FileOutputStream f = new FileOutputStream(directory);
            ObjectOutputStream oStream = new ObjectOutputStream(f);
            for (CDInformation cd : managerCD.getListCD()) {
                oStream.writeObject(cd);
            }
            oStream.close();
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
    }

    public void readFrom(String directory) {
        try {
            FileInputStream f = new FileInputStream(directory);
            ObjectInputStream iStream = new ObjectInputStream(f);
            CDInformation cd = null;
            while ((cd = (CDInformation) iStream.readObject()) != null) {
                managerCD.addCD(cd);
            }
            iStream.close();
        } catch (ClassNotFoundException e) {
            System.out.println("Class Not Found");
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackup;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNewCD;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRestore;
    private javax.swing.JButton btnSearch;
    private javax.swing.JTextField inputSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> searchType;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
